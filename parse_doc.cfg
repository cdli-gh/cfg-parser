# strictly left to right

###############
# REG grammar #
###############
#
# note that the attachment needs to be subsequently fixed
# and it probably needs to be extended
# but it's super fast
#
# restructuring operations implemented in parse_comm.py:
# - move-up (for a given node with a given parent, attach to grandparent)
# - under-next (for a node and its following sibling, make node dependent)
# - rename (S-variants to regular variants)
# - flat-tree (flatten recursive structures)
#
START -> 'START'

S_NUMBER_PRODUCT_LIST -> START NUMBER | START NUMBERS | START NUMBER_PRODUCT | START NUMBER_PRODUCT_LIST
S_NUMBER_PRODUCT_LIST -> S_NUMBER_PRODUCT_LIST NUMBER_PRODUCT | S_NUMBER_PRODUCT_LIST NUMBER| S_NUMBER_PRODUCT_LIST NUMBERS | S_NUMBER_PRODUCT_LIST NUMBER_PRODUCT_LIST
S_TRANSACTION -> START TRANSACTION | S_NUMBER_PRODUCT_LIST TRANSACTION
S_NUMBER_PRODUCT_LIST -> S_FRAG NUMBER_PRODUCT 
S_NUMBER_PRODUCT_LIST -> S_TRANSACTION NUMBER_PRODUCT 
S_TRANSACTION -> S_FRAG TRANSACTION	| S_TRANSACTION FRAG
S_FRAG -> S_NUMBER_PRODUCT_LIST FRAG
S_FRAG -> S_FRAG NUMBER | S_FRAG NUMBERS | S_FRAG FRAG
S_SZUNIGIN -> S_FRAG SZUNIGIN | S_TRANSACTION SZUNIGIN
S_SZUNIGIN -> S_SZUNIGIN NUMBER_PRODUCT | S_SZUNIGIN SZUNIGIN
S_FRAG -> S_SZUNIGIN NUMBER | S_FRAG FRAG

S_NUMBER_PRODUCT_LIST -> S_FRAG PRODUCT | S_FRAG PRODUCT_NAME | S_NUMBER_PRODUCT_LIST PRODUCT_PARAM

DOC -> S_TRANSACTION | S_SZUNIGIN | S_FRAG | S_NUMBER_PRODUCT_LIST 

##############
# vocabulary #
##############
# partially covered only
# note that we reduced the number of nonterminals: differentiate, esp., those under FRAG
# todo: integrate !

# fully supported
FRAG -> 'FRAG' 
NUMBER -> 'NUMBER' 
NUMBERS -> 'NUMBERS' 
NUMBER_PRODUCT -> 'NUMBER_PRODUCT' 
NUMBER_PRODUCT_LIST -> 'NUMBER_PRODUCT_LIST' 
PARSE -> 'PARSE' 
PRODUCT -> 'PRODUCT' 
SZUNIGIN -> 'SZUNIGIN' | 'SZU_NIGIN'
TRANSACTION -> 'TRANSACTION' 

# simpified treatment
TRANSACTION -> 'DATED_TRANSACTION' 
PRODUCT -> 'PRODUCT_NAME' 
PRODUCT -> 'PRODUCT_PARAM' 

# non-supported vocabulary
# to be revisited
FRAG -> 'ACCOUNTING' 
FRAG -> 'AGENT' 
FRAG -> 'BALA' 
FRAG -> 'CITY' 
FRAG -> 'CONJ' 
FRAG -> 'COPY' 
FRAG -> 'DATE' 
FRAG -> 'DAY' 
FRAG -> 'DEAD' 
FRAG -> 'EPILOG' 
FRAG -> 'FILIATION' 
FRAG -> 'FILIATION_EXP' 
FRAG -> 'GABARI' 
FRAG -> 'GIRI3' 
FRAG -> 'GOD' 
FRAG -> 'GOD_NAME' 
FRAG -> 'ITI' 
FRAG -> 'JOB' 
FRAG -> 'JOBNAME' 
FRAG -> 'KI' 
FRAG -> 'KISZIB' 
FRAG -> 'KISZIBA' 
FRAG -> 'LOCATION' 
FRAG -> 'MASZKIM' 
FRAG -> 'MINUS' 
FRAG -> 'MONTH' 
FRAG -> 'MONTH_NAME' 
FRAG -> 'MU' 
FRAG -> 'MUDU' 
FRAG -> 'NATIONALITY' 
FRAG -> 'PERSON' 
FRAG -> 'PN' 
FRAG -> 'PURPOSE' 
FRAG -> 'RECEIVED' 
FRAG -> 'SUMMARY' 
FRAG -> 'SZA3' 
FRAG -> 'U4' 
FRAG -> 'UNIT' 
FRAG -> 'YEAR' 
FRAG -> 'ZIGA' 

###############
# CFG grammar #
###############
# too slow to be usable

# # new rules
# NUMBER_PRODUCT_LIST -> NUMBER_PRODUCT NUMBER_PRODUCT
# NUMBER_PRODUCT_LIST -> NUMBER_PRODUCT_LIST NUMBER_PRODUCT
# # NUMBER_PRODUCT_LIST -> NUMBER_PRODUCT_LIST FRAG
# # NUMBER_PRODUCT -> NUMBER FRAG

# TRANSACTION -> NUMBER_PRODUCT_LIST TRANSACTION
# FRAG -> NUMBER_PRODUCT_LIST FRAG
# SZUNIGIN -> SZUNIGIN NUMBER_PRODUCT_LIST
# SZUNIGIN -> SZUNIGIN FRAG

# FRAG -> NUMBER FRAG
# TRANSACTIONS -> TRANSACTION
# TRANSACTIONS -> TRANSACTIONS TRANSACTION | TRANSACTIONS FRAG

# DOC -> TRANSACTIONS
# DOC -> DOC SZUNIGIN

#################
# full rule set #
#################
# use these if you drop FRAG nodes [VERY SLOW] with parse_comm.abandon_nodes(parse,["FRAG"])
# otherwise, copy to rule sets above upon demand

# # basic rules
# ACCOUNTING -> ZIGA PERSON
# AGENT -> BALA PERSON | GIRI3 PERSON | KI PERSON | KISZIB PERSON | MU PERSON | MUDU GOD | MUDU PERSON | PERSON | PERSON MASZKIM
# CITY -> SZA3 CITY
# COPY -> GABARI | GABARI KISZIB PERSON | GABARI KISZIBA PERSON
# DATE -> DAY | DAY MONTH | DAY MONTH YEAR | MONTH | MONTH YEAR
# DATED_TRANSACTION -> TRANSACTION DATE | TRANSACTION DATE RECEIVED | TRANSACTION RECEIVED | TRANSACTION RECEIVED DATE
# DAY -> U4 NUMBERS
# EPILOG -> DATED_TRANSACTION NUMBERS | DATED_TRANSACTION SUMMARY | TRANSACTION NUMBERS | TRANSACTION SUMMARY
# FILIATION -> FILIATION_EXP PERSON
# GOD -> GOD CITY | GOD NATIONALITY
# JOB -> JOB CITY | JOB GOD | JOBNAME
# LOCATION -> KI CITY
# MONTH -> ITI MONTH_NAME
# NUMBERS -> NUMBER | NUMBERS MINUS NUMBER | NUMBERS NUMBER
# NUMBER_PRODUCT -> NUMBERS PRODUCT | NUMBERS PRODUCT UNIT | NUMBERS UNIT | NUMBERS UNIT PRODUCT
# NUMBER_PRODUCT_LIST -> NUMBER_PRODUCT | NUMBER_PRODUCT_LIST | NUMBER_PRODUCT_LIST DEAD | NUMBER_PRODUCT_LIST NUMBER_PRODUCT
# PERSON -> JOB | PERSON CONJ PERSON | PERSON FILIATION | PERSON NATIONALITY | PN | PN JOB
# PRODUCT -> PRODUCT PRODUCT_NAME | PRODUCT PRODUCT_PARAM | PRODUCT_NAME
# PURPOSE -> GOD | GOD CITY | NOUN GOD | NOUN GOD CITY
# SUMMARY -> COPY | SUMMARY COPY | SUMMARY DATE | SUMMARY SZU_NIGIN | SZU_NIGIN
# SZU_NIGIN -> SZUNIGIN NUMBER_PRODUCT_LIST
# TRANSACTION -> NUMBER_PRODUCT_LIST AGENT | NUMBER_PRODUCT_LIST DATE | NUMBER_PRODUCT_LIST LOCATION | NUMBER_PRODUCT_LIST PURPOSE | TRANSACTION ACCOUNTING | TRANSACTION AGENT | TRANSACTION DATE | TRANSACTION LOCATION
# YEAR -> MU CITY | MU CITY VERB | MU NOUN GOD VERB | MU PERSON CITY VERB | MU PERSON NOUN GOD VERB | MU PERSON NOUN VERB | MU PERSON PERSON VERB

# # extended rules
# # bridge segment breaks before numerals
# TRANSACTION -> NUMBERS TRANSACTION | NUMBER_PRODUCT_LIST TRANSACTION
# DATED_TRANSACTION -> NUMBERS DATED_TRANSACTION | NUMBER_PRODUCT_LIST DATED_TRANSACTION
# NUMBER_PRODUCT -> NUMBER NUMBER_PRODUCT

# # fallback rules
# # every non-branching is a valid parse
# PARSE -> ACCOUNTING | AGENT | BALA | CITY | CONJ | COPY | DATE | DATED_TRANSACTION | DAY | DEAD | EPILOG | FILIATION | FILIATION_EXP | FRAG | GABARI | GIRI3 | GOD | GOD_NAME | ITI | JOB | JOBNAME | KI | KISZIB | KISZIBA | LOCATION | MASZKIM | MINUS | MONTH | MONTH_NAME | MU | MUDU | NATIONALITY | NUMBER | NUMBERS | NUMBER_PRODUCT | NUMBER_PRODUCT_LIST | PARSE | PERSON | PN | PRODUCT | PRODUCT_NAME | PRODUCT_PARAM | PURPOSE | RECEIVED | SUMMARY | SZA3 | SZUNIGIN | SZU_NIGIN | TRANSACTION | U4 | UNIT | YEAR | ZIGA

# # only valid parses can combine with FRAGs
# PARSE -> PARSE FRAG
# DOC -> PARSE | FRAG | DOC PARSE | DOC FRAG
# FRAG -> UNKNOWN

################
# "vocabulary" #
################
# ACCOUNTING -> 'ACCOUNTING' 
# AGENT -> 'AGENT' 
# BALA -> 'BALA' 
# CITY -> 'CITY' 
# CONJ -> 'CONJ' 
# COPY -> 'COPY' 
# DATE -> 'DATE' 
# DATED_TRANSACTION -> 'DATED_TRANSACTION' 
# DAY -> 'DAY' 
# DEAD -> 'DEAD' 
# EPILOG -> 'EPILOG' 
# FILIATION -> 'FILIATION' 
# FILIATION_EXP -> 'FILIATION_EXP' 
# FRAG -> 'FRAG' 
# GABARI -> 'GABARI' 
# GIRI3 -> 'GIRI3' 
# GOD -> 'GOD' 
# GOD_NAME -> 'GOD_NAME' 
# ITI -> 'ITI' 
# JOB -> 'JOB' 
# JOBNAME -> 'JOBNAME' 
# KI -> 'KI' 
# KISZIB -> 'KISZIB' 
# KISZIBA -> 'KISZIBA' 
# LOCATION -> 'LOCATION' 
# MASZKIM -> 'MASZKIM' 
# MINUS -> 'MINUS' 
# MONTH -> 'MONTH' 
# MONTH_NAME -> 'MONTH_NAME' 
# MU -> 'MU' 
# MUDU -> 'MUDU' 
# NATIONALITY -> 'NATIONALITY' 
# NUMBER -> 'NUMBER' 
# NUMBERS -> 'NUMBERS' 
# NUMBER_PRODUCT -> 'NUMBER_PRODUCT' 
# NUMBER_PRODUCT_LIST -> 'NUMBER_PRODUCT_LIST' 
# PARSE -> 'PARSE' 
# PERSON -> 'PERSON' 
# PN -> 'PN' 
# PRODUCT -> 'PRODUCT' 
# PRODUCT_NAME -> 'PRODUCT_NAME' 
# PRODUCT_PARAM -> 'PRODUCT_PARAM' 
# PURPOSE -> 'PURPOSE' 
# RECEIVED -> 'RECEIVED' 
# SUMMARY -> 'SUMMARY' 
# SZA3 -> 'SZA3' 
# SZUNIGIN -> 'SZUNIGIN' 
# SZU_NIGIN -> 'SZU_NIGIN' 
# TRANSACTION -> 'TRANSACTION' 
# U4 -> 'U4' 
# UNIT -> 'UNIT' 
# YEAR -> 'YEAR' 
# ZIGA -> 'ZIGA' 
