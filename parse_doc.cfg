# strictly left to right

###############
# REG grammar #
###############
#
# note that the attachment needs to be subsequently fixed
# and it probably needs to be extended
# but it's super fast
#
# restructuring operations implemented in parse_comm.py:
# - move-up (for a given node with a given parent, attach to grandparent)
# - under-next (for a node and its following sibling, make node dependent)
# - rename (S-variants to regular variants)
# - flat-tree (flatten recursive structures)
#

# artificial start symbol [before first token, in terms of top-down derivation, this actually marks the "end state"]
START -> 'START'

# all production rules
# first-level nonterminals (reduced set): FRAG NUMBER NUMBER_PRODUCT NUMBER_PRODUCT_LIST PRODUCT EPILOG TRANSACTION  [+ START]
# second-level nonterminals: S_FRAG S_NUMBER_PRODUCT_LIST S_EPILOG S_TRANSACTION [+ DOC]
# Note: *All* combinations of second-level nonterminals and (reduced) first-level nonterminals are supported
# it is thus guaranteed to find a parse
# Note: This is a left-branching regular grammar (all rules of type A -> Bc or A -> b)
# It basically provides a *sequential* segmentation according to the S_-nonterminals
# The transformation to a hierarchical segmentation requires post-hoc transformations
S_FRAG					->	START					FRAG
S_NUMBER_PRODUCT_LIST	->	START					NUMBER
S_NUMBER_PRODUCT_LIST	->	START					NUMBER_PRODUCT	
S_NUMBER_PRODUCT_LIST	->	START					NUMBER_PRODUCT_LIST
S_FRAG					-> 	START					PRODUCT
S_EPILOG				->	START					EPILOG
S_TRANSACTION			->	START					TRANSACTION

S_FRAG					->	S_FRAG					FRAG
S_FRAG					->	S_FRAG					NUMBER	
S_NUMBER_PRODUCT_LIST	->	S_FRAG					NUMBER_PRODUCT	
S_NUMBER_PRODUCT_LIST	->	S_FRAG					NUMBER_PRODUCT_LIST
S_NUMBER_PRODUCT_LIST	->	S_FRAG					PRODUCT
S_EPILOG				->	S_FRAG					EPILOG	
S_TRANSACTION			->	S_FRAG					TRANSACTION	

S_FRAG					->	S_NUMBER_PRODUCT_LIST	FRAG
S_NUMBER_PRODUCT_LIST	->	S_NUMBER_PRODUCT_LIST	NUMBER	
S_NUMBER_PRODUCT_LIST	->	S_NUMBER_PRODUCT_LIST	NUMBER_PRODUCT	
S_NUMBER_PRODUCT_LIST	->	S_NUMBER_PRODUCT_LIST	NUMBER_PRODUCT_LIST
S_FRAG					->	S_NUMBER_PRODUCT_LIST	PRODUCT
S_FRAG					->	S_NUMBER_PRODUCT_LIST	EPILOG
S_TRANSACTION			->	S_NUMBER_PRODUCT_LIST	TRANSACTION

S_EPILOG				->	S_EPILOG				FRAG
S_EPILOG				->	S_EPILOG				NUMBER
S_EPILOG				->	S_EPILOG				NUMBER_PRODUCT	
S_EPILOG				->	S_EPILOG				NUMBER_PRODUCT_LIST
S_EPILOG				->	S_EPILOG				PRODUCT
S_EPILOG				->	S_EPILOG				EPILOG

# the following rule should not exist, added only to guarantee parseability
# if symbols are introduced that are ambiguous for being part of EPILOG or TRANSACTION (e.g., DATE, KISZIB), disable this rule to provide disambiguation
S_EPILOG				->	S_EPILOG				TRANSACTION

S_TRANSACTION			->	S_TRANSACTION			FRAG
S_NUMBER_PRODUCT_LIST	->	S_TRANSACTION			NUMBER
S_NUMBER_PRODUCT_LIST	->	S_TRANSACTION			NUMBER_PRODUCT	
S_NUMBER_PRODUCT_LIST	->	S_TRANSACTION			NUMBER_PRODUCT_LIST
S_FRAG					->	S_TRANSACTION			PRODUCT
S_EPILOG				->	S_TRANSACTION			EPILOG
S_TRANSACTION			->	S_TRANSACTION			TRANSACTION

# top-level node [in terms of top-down derivation, this is the "start state"]
DOC	->	S_TRANSACTION	
DOC	->	S_EPILOG	
DOC	->	S_FRAG	
DOC	->	S_NUMBER_PRODUCT_LIST 

##############
# vocabulary #
##############
# partially covered only
# note that we reduced the number of nonterminals: differentiate, esp., those under FRAG
# todo: integrate !

# fully supported
FRAG -> 'FRAG' | 'UNKNOWN'
NUMBER -> 'NUMBER' 
NUMBER_PRODUCT -> 'NUMBER_PRODUCT' 
NUMBER_PRODUCT_LIST -> 'NUMBER_PRODUCT_LIST' 
PARSE -> 'PARSE' 
PRODUCT -> 'PRODUCT' 
EPILOG -> 'EPILOG'
TRANSACTION -> 'TRANSACTION' 

# simpified treatment
TRANSACTION -> 'DATED_TRANSACTION' 
PRODUCT -> 'PRODUCT_NAME' 
PRODUCT -> 'PRODUCT_PARAM' 
NUMBER -> 'NUMBERS'
EPILOG -> 'SZU_NIGIN' | 'SZUNIGIN' | 'SUMMARY' | 'COPY'

# non-supported vocabulary
# to be revisited
FRAG -> 'ACCOUNTING' 
FRAG -> 'AGENT' 
FRAG -> 'BALA' 
FRAG -> 'CITY' 
FRAG -> 'CONJ' 
FRAG -> 'DATE' 
FRAG -> 'DAY' 
FRAG -> 'DEAD' 
FRAG -> 'FILIATION' 
FRAG -> 'FILIATION_EXP' 
FRAG -> 'GABARI' 
FRAG -> 'GIRI3' 
FRAG -> 'GOD' 
FRAG -> 'GOD_NAME' 
FRAG -> 'ITI' 
FRAG -> 'JOB' 
FRAG -> 'JOBNAME' 
FRAG -> 'KI' 
FRAG -> 'KISZIB' 
FRAG -> 'KISZIBA' 
FRAG -> 'LOCATION' 
FRAG -> 'MASZKIM' 
FRAG -> 'MINUS' 
FRAG -> 'MONTH' 
FRAG -> 'MONTH_NAME' 
FRAG -> 'MU' 
FRAG -> 'MUDU' 
FRAG -> 'NATIONALITY' 
FRAG -> 'PERSON' 
FRAG -> 'PN' 
FRAG -> 'PURPOSE' 
FRAG -> 'RECEIVED' 
FRAG -> 'SZA3' 
FRAG -> 'U4' 
FRAG -> 'UNIT' 
FRAG -> 'YEAR' 
FRAG -> 'ZIGA' 